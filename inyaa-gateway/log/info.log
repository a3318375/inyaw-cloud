2024-01-03 10:20:15 [org.hibernate.validator.internal.util.Version:21] - HV000001: Hibernate Validator 8.0.1.Final
2024-01-03 10:20:15 [org.springframework.boot.StartupInfoLogger:50] - Starting InyaaGatewayApplication using Java 21 with PID 14472 (D:\java\workspace3\inyaa\inyaa-gateway\build\classes\java\main started by yuxhc in D:\java\workspace3\inyaa\inyaa-gateway)
2024-01-03 10:20:15 [org.springframework.boot.SpringApplication:668] - The following 1 profile is active: "dev"
2024-01-03 10:20:15 [org.springframework.boot.logging.DeferredLog:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-01-03 10:20:15 [org.springframework.boot.logging.DeferredLog:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-01-03 10:20:17 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:292] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-03 10:20:17 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-03 10:20:17 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 20 ms. Found 0 JPA repository interfaces.
2024-01-03 10:20:17 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:292] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-03 10:20:17 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-03 10:20:17 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2024-01-03 10:20:18 [org.springframework.cloud.context.scope.GenericScope:282] - BeanFactory id=f2b54885-707d-3c50-84b9-038167d23145
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:429] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00000268b05d69f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:429] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:19 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:20:20 [org.hibernate.jpa.internal.util.LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-03 10:20:20 [org.hibernate.Version:44] - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-01-03 10:20:20 [org.hibernate.cache.internal.RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
2024-01-03 10:20:21 [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-03 10:20:21 [com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2024-01-03 10:20:21 [com.zaxxer.hikari.pool.HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@e813a42
2024-01-03 10:20:21 [com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2024-01-03 10:20:22 [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-03 10:20:22 [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-03 10:20:25 [org.springframework.context.support.AbstractApplicationContext:633] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'nettyWriteResponseFilter' defined in class path resource [org/springframework/cloud/gateway/config/GatewayAutoConfiguration$NettyConfiguration.class]: Unsatisfied dependency expressed through method 'nettyWriteResponseFilter' parameter 0: Error creating bean with name 'gatewayProperties': Could not bind properties to 'GatewayProperties' : prefix=spring.cloud.gateway, ignoreInvalidFields=false, ignoreUnknownFields=true
2024-01-03 10:20:25 [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-01-03 10:20:25 [com.zaxxer.hikari.HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
2024-01-03 10:20:25 [com.zaxxer.hikari.HikariDataSource:352] - HikariPool-1 - Shutdown completed.
2024-01-03 10:20:25 [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-01-03 10:20:25 [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'spring.cloud.gateway' to org.springframework.cloud.gateway.config.GatewayProperties failed:

    Property: spring.cloud.gateway.routes[0].predicates
    Value: "[]"
    Reason: 不能为空


Action:

Update your application's configuration

2024-01-03 10:23:28 [org.hibernate.validator.internal.util.Version:21] - HV000001: Hibernate Validator 8.0.1.Final
2024-01-03 10:23:28 [org.springframework.boot.StartupInfoLogger:50] - Starting InyaaGatewayApplication using Java 21 with PID 9240 (D:\java\workspace3\inyaa\inyaa-gateway\build\classes\java\main started by yuxhc in D:\java\workspace3\inyaa\inyaa-gateway)
2024-01-03 10:23:28 [org.springframework.boot.SpringApplication:668] - The following 1 profile is active: "dev"
2024-01-03 10:23:28 [org.springframework.boot.logging.DeferredLog:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-01-03 10:23:28 [org.springframework.boot.logging.DeferredLog:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-01-03 10:23:30 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:292] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-03 10:23:30 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-03 10:23:30 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 21 ms. Found 0 JPA repository interfaces.
2024-01-03 10:23:30 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:292] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-03 10:23:30 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-03 10:23:30 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-01-03 10:23:31 [org.springframework.cloud.context.scope.GenericScope:282] - BeanFactory id=f2b54885-707d-3c50-84b9-038167d23145
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:429] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000001a3465d6c28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:429] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:32 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 10:23:33 [org.hibernate.jpa.internal.util.LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-03 10:23:34 [org.hibernate.Version:44] - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-01-03 10:23:34 [org.hibernate.cache.internal.RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
2024-01-03 10:23:34 [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-03 10:23:34 [com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2024-01-03 10:23:35 [com.zaxxer.hikari.pool.HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@aff7ac6
2024-01-03 10:23:35 [com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2024-01-03 10:23:35 [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-03 10:23:35 [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [After]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Before]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Between]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Cookie]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Header]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Host]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Method]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Path]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Query]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [ReadBody]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [RemoteAddr]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Weight]
2024-01-03 10:23:39 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-01-03 10:23:42 [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:58] - Exposing 1 endpoint(s) beneath base path '/actuator'
2024-01-03 10:23:45 [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
2024-01-03 10:23:45 [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:94] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-01-03 10:23:46 [org.springframework.boot.web.embedded.netty.NettyWebServer:141] - Netty started on port 8083
2024-01-03 10:23:46 [org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry:65] - Registering service with consul: NewService{id='inyaa-gateway-01', name='inyaa-gateway', tags=[], address='192.168.1.61', meta={secure=false}, port=8083, enableTagOverride=null, check=Check{script='null', dockerContainerID='null', shell='null', interval='10s', ttl='null', http='http://192.168.1.61:8083/actuator/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null', grpc='null', grpcUseTLS=null}, checks=null}
2024-01-03 10:23:46 [org.springframework.boot.StartupInfoLogger:56] - Started InyaaGatewayApplication in 19.827 seconds (process running for 24.147)
2024-01-03 10:25:17 [org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry:89] - Deregistering service with consul: inyaa-gateway-01
2024-01-03 10:25:20 [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-01-03 10:25:20 [com.zaxxer.hikari.HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
2024-01-03 10:25:20 [com.zaxxer.hikari.HikariDataSource:352] - HikariPool-1 - Shutdown completed.
2024-01-03 14:34:48 [org.hibernate.validator.internal.util.Version:21] - HV000001: Hibernate Validator 8.0.1.Final
2024-01-03 14:34:48 [org.springframework.boot.StartupInfoLogger:50] - Starting InyaaGatewayApplication using Java 21 with PID 28624 (D:\java\workspace3\inyaa\inyaa-gateway\build\classes\java\main started by yuxhc in D:\java\workspace3\inyaa\inyaa-gateway)
2024-01-03 14:34:48 [org.springframework.boot.SpringApplication:668] - The following 1 profile is active: "dev"
2024-01-03 14:34:48 [org.springframework.boot.logging.DeferredLog:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-01-03 14:34:48 [org.springframework.boot.logging.DeferredLog:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-01-03 14:34:51 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:292] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-03 14:34:51 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-03 14:34:51 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 25 ms. Found 0 JPA repository interfaces.
2024-01-03 14:34:51 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:292] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-03 14:34:51 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:139] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-03 14:34:51 [org.springframework.data.repository.config.RepositoryConfigurationDelegate:208] - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2024-01-03 14:34:51 [org.springframework.cloud.context.scope.GenericScope:282] - BeanFactory id=f2b54885-707d-3c50-84b9-038167d23145
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:429] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x000001b8ab5fee20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:429] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:53 [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:437] - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-03 14:34:54 [org.hibernate.jpa.internal.util.LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-03 14:34:54 [org.hibernate.Version:44] - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-01-03 14:34:54 [org.hibernate.cache.internal.RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
2024-01-03 14:34:55 [org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-03 14:34:55 [com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2024-01-03 14:34:55 [com.zaxxer.hikari.pool.HikariPool:565] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4640fcaf
2024-01-03 14:34:55 [com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2024-01-03 14:34:56 [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:58] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-01-03 14:34:56 [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [After]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Before]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Between]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Cookie]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Header]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Host]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Method]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Path]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Query]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [ReadBody]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [RemoteAddr]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [Weight]
2024-01-03 14:35:01 [org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator:89] - Loaded RoutePredicateFactory [CloudFoundryRouteService]
2024-01-03 14:35:03 [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:58] - Exposing 1 endpoint(s) beneath base path '/actuator'
2024-01-03 14:35:06 [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:59] - LiveReload server is running on port 35729
2024-01-03 14:35:07 [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:94] - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-01-03 14:35:07 [org.springframework.boot.web.embedded.netty.NettyWebServer:141] - Netty started on port 8083
2024-01-03 14:35:07 [org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry:65] - Registering service with consul: NewService{id='inyaa-gateway-01', name='inyaa-gateway', tags=[], address='192.168.1.61', meta={secure=false}, port=8083, enableTagOverride=null, check=Check{script='null', dockerContainerID='null', shell='null', interval='10s', ttl='null', http='http://192.168.1.61:8083/actuator/health', method='null', header={}, tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null', grpc='null', grpcUseTLS=null}, checks=null}
2024-01-03 14:35:07 [org.springframework.boot.StartupInfoLogger:56] - Started InyaaGatewayApplication in 21.746 seconds (process running for 31.801)
2024-01-03 14:37:59 [org.springframework.cloud.consul.serviceregistry.ConsulServiceRegistry:89] - Deregistering service with consul: inyaa-gateway-01
2024-01-03 14:38:00 [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-01-03 14:38:00 [com.zaxxer.hikari.HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
2024-01-03 14:38:00 [com.zaxxer.hikari.HikariDataSource:352] - HikariPool-1 - Shutdown completed.
