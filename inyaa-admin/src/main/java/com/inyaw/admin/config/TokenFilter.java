package com.inyaw.admin.config;import jakarta.servlet.FilterChain;import jakarta.servlet.ServletException;import jakarta.servlet.http.HttpServletRequest;import jakarta.servlet.http.HttpServletResponse;import lombok.RequiredArgsConstructor;import org.apache.commons.lang3.StringUtils;import org.springframework.security.core.Authentication;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.stereotype.Service;import org.springframework.web.filter.OncePerRequestFilter;import java.io.IOException;@Service@RequiredArgsConstructorpublic class TokenFilter extends OncePerRequestFilter {    private final RedisService redisService;    @Override    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)            throws ServletException, IOException {        String header = request.getHeader("Authorization");        if (StringUtils.isBlank(header)) {            header = request.getHeader("authorization");        }        if (StringUtils.isNotBlank(header)) {            Authentication authentication = (Authentication) redisService.get(header);            if (authentication != null) {                SecurityContextHolder.getContext().setAuthentication(authentication);            }        }        filterChain.doFilter(request, response);    }}